<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on 持之以恒</title>
    <link>/tags/java/</link>
    <description>Recent content in java on 持之以恒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Nov 2019 19:26:17 +0800</lastBuildDate>
    
	<atom:link href="/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jni</title>
      <link>/blog/2019/11/29/jni/</link>
      <pubDate>Fri, 29 Nov 2019 19:26:17 +0800</pubDate>
      
      <guid>/blog/2019/11/29/jni/</guid>
      <description>JNI Java平台有个用户和本地C代码进行互操作的API，称为Java Native Interface (Java本地接口)
Native 使用native关键字说明这个方法是原生函数，也就是这个方法是用C/C++语言实现的，并且被编译成了DLL，由java去调用。这些函数的实现体在DLL中，JDK的源代码中并不包含，你当然看不到。对于不同的平台它们也是不同的。这也是java的底层机制，实际上java就是在不同的平台上调用不同的native方法实现对操作系统的访问的。
Mac下写一个jni的demo   文件都在目录：/Users/xxxx/myJavaDir下
  HelloNative.java文件：
public class HelloNative { static { System.loadLibrary(&amp;#34;HelloNative&amp;#34;); } public static native void sayHello(); @SuppressWarnings(&amp;#34;static-access&amp;#34;) public static void main(String[] args) { new HelloNative().sayHello(); } }   javac HelloNative编译生成HelloNative.class
  javah HelloNative生成文件HelloNative.h
  HelloNative.c文件内容：
#include &amp;#34;jni.h&amp;#34;#include &amp;#34;HelloNative.h&amp;#34;#include &amp;lt;stdio.h&amp;gt; JNIEXPORT void JNICALL Java_HelloNative_sayHello(JNIEnv *env,jobject obj) { printf(&amp;#34;Hello，JNI&amp;#34;); }   生成dll动态链接库
gcc -dynamiclib -I&amp;quot;/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/include&amp;quot; -I&amp;quot;/Users/xxxx/myJavaDir&amp;quot; -I&amp;quot;/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/include/darwin/&amp;quot; -o libHelloNative.</description>
    </item>
    
    <item>
      <title>P3c规则开发</title>
      <link>/blog/2019/10/29/p3c%E8%A7%84%E5%88%99%E5%BC%80%E5%8F%91/</link>
      <pubDate>Tue, 29 Oct 2019 23:14:44 +0800</pubDate>
      
      <guid>/blog/2019/10/29/p3c%E8%A7%84%E5%88%99%E5%BC%80%E5%8F%91/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>